// <auto-generated />
using System;
using Compras.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Compras.Migrations
{
    [DbContext(typeof(SistemaComprasBADContext))]
    partial class SistemaComprasBADContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Compras.Models.Categoriaproveedor", b =>
                {
                    b.Property<int>("Idproveedores")
                        .HasColumnType("int")
                        .HasColumnName("IDPROVEEDORES");

                    b.Property<int>("Idcategoria")
                        .HasColumnType("int")
                        .HasColumnName("IDCATEGORIA");

                    b.HasKey("Idproveedores", "Idcategoria")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idcategoria" }, "CATEGORIAPROVEEDOR2_FK");

                    b.HasIndex(new[] { "Idproveedores" }, "CATEGORIAPROVEEDOR_FK");

                    b.ToTable("CATEGORIAPROVEEDOR");
                });

            modelBuilder.Entity("Compras.Models.Categorium", b =>
                {
                    b.Property<int>("Idcategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCATEGORIA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombrecategoria")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRECATEGORIA");

                    b.HasKey("Idcategoria")
                        .IsClustered(false);

                    b.ToTable("CATEGORIA");
                });

            modelBuilder.Entity("Compras.Models.Companium", b =>
                {
                    b.Property<int>("Idcompania")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCOMPANIA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contactocomania")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CONTACTOCOMANIA");

                    b.Property<int>("Idperfil")
                        .HasColumnType("int")
                        .HasColumnName("IDPERFIL");

                    b.Property<string>("Nombrecompania")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRECOMPANIA");

                    b.Property<string>("Telefonocompania")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TELEFONOCOMPANIA");

                    b.Property<string>("Valorcompania")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("VALORCOMPANIA");

                    b.HasKey("Idcompania")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idperfil" }, "ATIENDE_FK");

                    b.ToTable("COMPANIA");
                });

            modelBuilder.Entity("Compras.Models.Cotizacion", b =>
                {
                    b.Property<int>("Idcotizacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDCOTIZACION")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fechacotizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHACOTIZACION");

                    b.Property<int>("Idmetodopago")
                        .HasColumnType("int")
                        .HasColumnName("IDMETODOPAGO");

                    b.Property<int?>("Idordencompra")
                        .HasColumnType("int")
                        .HasColumnName("IDORDENCOMPRA");

                    b.Property<int>("Idproveedores")
                        .HasColumnType("int")
                        .HasColumnName("IDPROVEEDORES");

                    b.Property<int>("Idrequisicion")
                        .HasColumnType("int")
                        .HasColumnName("IDREQUISICION");

                    b.Property<double>("Precio")
                        .HasColumnType("float")
                        .HasColumnName("PRECIO");

                    b.HasKey("Idcotizacion")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idordencompra" }, "DAPASO2_FK");

                    b.HasIndex(new[] { "Idproveedores" }, "HACEN_FK");

                    b.HasIndex(new[] { "Idmetodopago" }, "SEPAGA_FK");

                    b.HasIndex(new[] { "Idrequisicion" }, "SURGE_FK");

                    b.ToTable("COTIZACION");
                });

            modelBuilder.Entity("Compras.Models.Metodopago", b =>
                {
                    b.Property<int>("Idmetodopago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDMETODOPAGO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombretipo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRETIPO");

                    b.HasKey("Idmetodopago")
                        .IsClustered(false);

                    b.ToTable("METODOPAGO");
                });

            modelBuilder.Entity("Compras.Models.Ordencompra", b =>
                {
                    b.Property<int>("Idordencompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDORDENCOMPRA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Fechacotizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHACOTIZACION");

                    b.Property<int>("Idcotizacion")
                        .HasColumnType("int")
                        .HasColumnName("IDCOTIZACION");

                    b.HasKey("Idordencompra")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idcotizacion" }, "DAPASO_FK");

                    b.ToTable("ORDENCOMPRA");
                });

            modelBuilder.Entity("Compras.Models.Perfil", b =>
                {
                    b.Property<int>("Idperfil")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPERFIL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DirectorareaLista")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("DIRECTORAREA_LISTA___");

                    b.Property<string>("Escritura")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("ESCRITURA");

                    b.Property<int>("Idproveedores")
                        .HasColumnType("int")
                        .HasColumnName("IDPROVEEDORES");

                    b.Property<string>("Nombreceo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRECEO__");

                    b.Property<string>("Nombregerente")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBREGERENTE__");

                    b.Property<string>("Razonsocial")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("RAZONSOCIAL");

                    b.HasKey("Idperfil")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idproveedores" }, "RELATIONSHIP_3_FK");

                    b.ToTable("PERFIL");
                });

            modelBuilder.Entity("Compras.Models.Perfilreferencia", b =>
                {
                    b.Property<int>("Idperfil")
                        .HasColumnType("int")
                        .HasColumnName("IDPERFIL");

                    b.Property<int>("Idreferencia")
                        .HasColumnType("int")
                        .HasColumnName("IDREFERENCIA");

                    b.HasKey("Idperfil", "Idreferencia")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idreferencia" }, "PERFILREFERENCIAS2_FK");

                    b.HasIndex(new[] { "Idperfil" }, "PERFILREFERENCIAS_FK");

                    b.ToTable("PERFILREFERENCIAS");
                });

            modelBuilder.Entity("Compras.Models.Personalclave", b =>
                {
                    b.Property<int>("Idpersonalclave")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPERSONALCLAVE")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cargopersonal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CARGOPERSONAL");

                    b.Property<string>("Firmapersonal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("FIRMAPERSONAL");

                    b.Property<int>("Idperfil")
                        .HasColumnType("int")
                        .HasColumnName("IDPERFIL");

                    b.Property<string>("Nombrepersonal")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBREPERSONAL");

                    b.HasKey("Idpersonalclave")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idperfil" }, "PUEDETENER_FK");

                    b.ToTable("PERSONALCLAVE");
                });

            modelBuilder.Entity("Compras.Models.Producto", b =>
                {
                    b.Property<int>("Idproducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPRODUCTO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcionprod")
                        .IsRequired()
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("DESCRIPCIONPROD");

                    b.Property<string>("Garantiaprod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("GARANTIAPROD");

                    b.Property<int>("Idcategoria")
                        .HasColumnType("int")
                        .HasColumnName("IDCATEGORIA");

                    b.Property<string>("Imagenprod")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("IMAGENPROD");

                    b.Property<string>("Marcaprod")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("MARCAPROD");

                    b.Property<string>("Medidasprod")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("MEDIDASPROD");

                    b.Property<string>("Nombreprod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBREPROD");

                    b.Property<double>("Precioprod")
                        .HasColumnType("float")
                        .HasColumnName("PRECIOPROD");

                    b.Property<string>("Utilidadprod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("UTILIDADPROD");

                    b.HasKey("Idproducto")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idcategoria" }, "RELATIONSHIP_1_FK");

                    b.ToTable("PRODUCTO");
                });

            modelBuilder.Entity("Compras.Models.Productorequisicion", b =>
                {
                    b.Property<int>("Idproducto")
                        .HasColumnType("int")
                        .HasColumnName("IDPRODUCTO");

                    b.Property<int>("Idrequisicion")
                        .HasColumnType("int")
                        .HasColumnName("IDREQUISICION");

                    b.HasKey("Idproducto", "Idrequisicion")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idrequisicion" }, "PRODUCTOREQUISICION2_FK");

                    b.HasIndex(new[] { "Idproducto" }, "PRODUCTOREQUISICION_FK");

                    b.ToTable("PRODUCTOREQUISICION");
                });

            modelBuilder.Entity("Compras.Models.Proveedor", b =>
                {
                    b.Property<int>("Idproveedores")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDPROVEEDORES")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calificacion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("CALIFICACION");

                    b.Property<int?>("ContactosLista")
                        .HasColumnType("int")
                        .HasColumnName("CONTACTOS__LISTA___");

                    b.Property<string>("Direccioncompania")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("DIRECCIONCOMPANIA__");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EMAIL__");

                    b.Property<string>("Faxcompania")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("FAXCOMPANIA__");

                    b.Property<int?>("Idperfil")
                        .HasColumnType("int")
                        .HasColumnName("IDPERFIL");

                    b.Property<string>("Movilcompania")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("MOVILCOMPANIA__");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NIT");

                    b.Property<string>("Nombreproveedor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBREPROVEEDOR");

                    b.Property<string>("Nrc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("NRC");

                    b.Property<string>("Representante")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("REPRESENTANTE__");

                    b.Property<int>("Rubro")
                        .HasColumnType("int")
                        .HasColumnName("RUBRO");

                    b.Property<string>("Telefonocompania")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TELEFONOCOMPANIA__");

                    b.Property<int>("Tipoorganizacion")
                        .HasColumnType("int")
                        .HasColumnName("TIPOORGANIZACION");

                    b.Property<string>("Website")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("WEBSITE__");

                    b.HasKey("Idproveedores")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idperfil" }, "RELATIONSHIP_4_FK");

                    b.ToTable("PROVEEDOR");
                });

            modelBuilder.Entity("Compras.Models.Referencium", b =>
                {
                    b.Property<int>("Idreferencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDREFERENCIA")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombrecompania")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("NOMBRECOMPANIA");

                    b.Property<string>("Nombrecontacto")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBRECONTACTO");

                    b.Property<string>("Telefonocontacto")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("TELEFONOCONTACTO");

                    b.Property<string>("Tiporeferencia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIPOREFERENCIA");

                    b.HasKey("Idreferencia")
                        .IsClustered(false);

                    b.ToTable("REFERENCIA");
                });

            modelBuilder.Entity("Compras.Models.Requisicion", b =>
                {
                    b.Property<int>("Idrequisicion")
                        .HasColumnType("int")
                        .HasColumnName("IDREQUISICION");

                    b.Property<int>("Cantidadproducto")
                        .HasColumnType("int")
                        .HasColumnName("CANTIDADPRODUCTO");

                    b.Property<DateTime>("Fechacreada")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHACREADA");

                    b.Property<DateTime>("Fechaestimada")
                        .HasColumnType("datetime")
                        .HasColumnName("FECHAESTIMADA");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int")
                        .HasColumnName("IDUSUARIO");

                    b.Property<string>("Nivelimportancia")
                        .IsRequired()
                        .HasMaxLength(25)
                        .IsUnicode(false)
                        .HasColumnType("varchar(25)")
                        .HasColumnName("NIVELIMPORTANCIA");

                    b.HasKey("Idrequisicion")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idusuario" }, "CREA_FK");

                    b.ToTable("REQUISICION");
                });

            modelBuilder.Entity("Compras.Models.Role", b =>
                {
                    b.Property<int>("Idrol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDROL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcionrol")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("DESCRIPCIONROL");

                    b.Property<string>("Nombrerol")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBREROL");

                    b.HasKey("Idrol")
                        .IsClustered(false);

                    b.ToTable("ROLES");
                });

            modelBuilder.Entity("Compras.Models.Sucursal", b =>
                {
                    b.Property<int>("Idsucursal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDSUCURSAL")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Idperfil")
                        .HasColumnType("int")
                        .HasColumnName("IDPERFIL");

                    b.Property<string>("Imagensucursal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("IMAGENSUCURSAL");

                    b.Property<string>("Ubicacionsucursal")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("UBICACIONSUCURSAL");

                    b.HasKey("Idsucursal")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idperfil" }, "CUENTACON_FK");

                    b.ToTable("SUCURSAL");
                });

            modelBuilder.Entity("Compras.Models.Usuario", b =>
                {
                    b.Property<int>("Idusuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDUSUARIO")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Contra")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("char(10)")
                        .HasColumnName("CONTRA")
                        .IsFixedLength(true);

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CORREO");

                    b.Property<int?>("Idproveedores")
                        .HasColumnType("int")
                        .HasColumnName("IDPROVEEDORES");

                    b.Property<int>("Idrol")
                        .HasColumnType("int")
                        .HasColumnName("IDROL");

                    b.Property<string>("Nombreusuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("NOMBREUSUARIO");

                    b.HasKey("Idusuario")
                        .IsClustered(false);

                    b.HasIndex(new[] { "Idrol" }, "ESTABLECEN_FK");

                    b.HasIndex(new[] { "Idproveedores" }, "SELECREAN_FK");

                    b.ToTable("USUARIO");
                });

            modelBuilder.Entity("Compras.Models.Categoriaproveedor", b =>
                {
                    b.HasOne("Compras.Models.Categorium", "IdcategoriaNavigation")
                        .WithMany("Categoriaproveedors")
                        .HasForeignKey("Idcategoria")
                        .HasConstraintName("FK_CATEGORI_CATEGORIA_CATEGORI")
                        .IsRequired();

                    b.HasOne("Compras.Models.Proveedor", "IdproveedoresNavigation")
                        .WithMany("Categoriaproveedors")
                        .HasForeignKey("Idproveedores")
                        .HasConstraintName("FK_CATEGORI_CATEGORIA_PROVEEDO")
                        .IsRequired();

                    b.Navigation("IdcategoriaNavigation");

                    b.Navigation("IdproveedoresNavigation");
                });

            modelBuilder.Entity("Compras.Models.Companium", b =>
                {
                    b.HasOne("Compras.Models.Perfil", "IdperfilNavigation")
                        .WithMany("Compania")
                        .HasForeignKey("Idperfil")
                        .HasConstraintName("FK_COMPANIA_ATIENDE_PERFIL")
                        .IsRequired();

                    b.Navigation("IdperfilNavigation");
                });

            modelBuilder.Entity("Compras.Models.Cotizacion", b =>
                {
                    b.HasOne("Compras.Models.Metodopago", "IdmetodopagoNavigation")
                        .WithMany("Cotizacions")
                        .HasForeignKey("Idmetodopago")
                        .HasConstraintName("FK_COTIZACI_SEPAGA_METODOPA")
                        .IsRequired();

                    b.HasOne("Compras.Models.Ordencompra", "IdordencompraNavigation")
                        .WithMany("Cotizacions")
                        .HasForeignKey("Idordencompra")
                        .HasConstraintName("FK_COTIZACI_DAPASO2_ORDENCOM");

                    b.HasOne("Compras.Models.Proveedor", "IdproveedoresNavigation")
                        .WithMany("Cotizacions")
                        .HasForeignKey("Idproveedores")
                        .HasConstraintName("FK_COTIZACI_HACEN_PROVEEDO")
                        .IsRequired();

                    b.HasOne("Compras.Models.Requisicion", "IdrequisicionNavigation")
                        .WithMany("Cotizacions")
                        .HasForeignKey("Idrequisicion")
                        .HasConstraintName("FK_COTIZACI_SURGE_REQUISIC")
                        .IsRequired();

                    b.Navigation("IdmetodopagoNavigation");

                    b.Navigation("IdordencompraNavigation");

                    b.Navigation("IdproveedoresNavigation");

                    b.Navigation("IdrequisicionNavigation");
                });

            modelBuilder.Entity("Compras.Models.Ordencompra", b =>
                {
                    b.HasOne("Compras.Models.Cotizacion", "IdcotizacionNavigation")
                        .WithMany("Ordencompras")
                        .HasForeignKey("Idcotizacion")
                        .HasConstraintName("FK_ORDENCOM_DAPASO_COTIZACI")
                        .IsRequired();

                    b.Navigation("IdcotizacionNavigation");
                });

            modelBuilder.Entity("Compras.Models.Perfil", b =>
                {
                    b.HasOne("Compras.Models.Proveedor", "IdproveedoresNavigation")
                        .WithMany("Perfils")
                        .HasForeignKey("Idproveedores")
                        .HasConstraintName("FK_PERFIL_RELATIONS_PROVEEDO")
                        .IsRequired();

                    b.Navigation("IdproveedoresNavigation");
                });

            modelBuilder.Entity("Compras.Models.Perfilreferencia", b =>
                {
                    b.HasOne("Compras.Models.Perfil", "IdperfilNavigation")
                        .WithMany("Perfilreferencia")
                        .HasForeignKey("Idperfil")
                        .HasConstraintName("FK_PERFILRE_PERFILREF_PERFIL")
                        .IsRequired();

                    b.HasOne("Compras.Models.Referencium", "IdreferenciaNavigation")
                        .WithMany("Perfilreferencia")
                        .HasForeignKey("Idreferencia")
                        .HasConstraintName("FK_PERFILRE_PERFILREF_REFERENC")
                        .IsRequired();

                    b.Navigation("IdperfilNavigation");

                    b.Navigation("IdreferenciaNavigation");
                });

            modelBuilder.Entity("Compras.Models.Personalclave", b =>
                {
                    b.HasOne("Compras.Models.Perfil", "IdperfilNavigation")
                        .WithMany("Personalclaves")
                        .HasForeignKey("Idperfil")
                        .HasConstraintName("FK_PERSONAL_PUEDETENE_PERFIL")
                        .IsRequired();

                    b.Navigation("IdperfilNavigation");
                });

            modelBuilder.Entity("Compras.Models.Producto", b =>
                {
                    b.HasOne("Compras.Models.Categorium", "IdcategoriaNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("Idcategoria")
                        .HasConstraintName("FK_PRODUCTO_RELATIONS_CATEGORI")
                        .IsRequired();

                    b.Navigation("IdcategoriaNavigation");
                });

            modelBuilder.Entity("Compras.Models.Productorequisicion", b =>
                {
                    b.HasOne("Compras.Models.Producto", "IdproductoNavigation")
                        .WithMany("Productorequisicions")
                        .HasForeignKey("Idproducto")
                        .HasConstraintName("FK_PRODUCTO_PRODUCTOR_PRODUCTO")
                        .IsRequired();

                    b.HasOne("Compras.Models.Requisicion", "IdrequisicionNavigation")
                        .WithMany("Productorequisicions")
                        .HasForeignKey("Idrequisicion")
                        .HasConstraintName("FK_PRODUCTO_PRODUCTOR_REQUISIC")
                        .IsRequired();

                    b.Navigation("IdproductoNavigation");

                    b.Navigation("IdrequisicionNavigation");
                });

            modelBuilder.Entity("Compras.Models.Proveedor", b =>
                {
                    b.HasOne("Compras.Models.Perfil", "IdperfilNavigation")
                        .WithMany("Proveedors")
                        .HasForeignKey("Idperfil")
                        .HasConstraintName("FK_PROVEEDO_RELATIONS_PERFIL");

                    b.Navigation("IdperfilNavigation");
                });

            modelBuilder.Entity("Compras.Models.Requisicion", b =>
                {
                    b.HasOne("Compras.Models.Usuario", "IdusuarioNavigation")
                        .WithMany("Requisicions")
                        .HasForeignKey("Idusuario")
                        .HasConstraintName("FK_REQUISIC_CREA_USUARIO")
                        .IsRequired();

                    b.Navigation("IdusuarioNavigation");
                });

            modelBuilder.Entity("Compras.Models.Sucursal", b =>
                {
                    b.HasOne("Compras.Models.Perfil", "IdperfilNavigation")
                        .WithMany("Sucursals")
                        .HasForeignKey("Idperfil")
                        .HasConstraintName("FK_SUCURSAL_CUENTACON_PERFIL")
                        .IsRequired();

                    b.Navigation("IdperfilNavigation");
                });

            modelBuilder.Entity("Compras.Models.Usuario", b =>
                {
                    b.HasOne("Compras.Models.Proveedor", "IdproveedoresNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Idproveedores")
                        .HasConstraintName("FK_USUARIO_SELECREAN_PROVEEDO");

                    b.HasOne("Compras.Models.Role", "IdrolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("Idrol")
                        .HasConstraintName("FK_USUARIO_ESTABLECE_ROLES")
                        .IsRequired();

                    b.Navigation("IdproveedoresNavigation");

                    b.Navigation("IdrolNavigation");
                });

            modelBuilder.Entity("Compras.Models.Categorium", b =>
                {
                    b.Navigation("Categoriaproveedors");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Compras.Models.Cotizacion", b =>
                {
                    b.Navigation("Ordencompras");
                });

            modelBuilder.Entity("Compras.Models.Metodopago", b =>
                {
                    b.Navigation("Cotizacions");
                });

            modelBuilder.Entity("Compras.Models.Ordencompra", b =>
                {
                    b.Navigation("Cotizacions");
                });

            modelBuilder.Entity("Compras.Models.Perfil", b =>
                {
                    b.Navigation("Compania");

                    b.Navigation("Perfilreferencia");

                    b.Navigation("Personalclaves");

                    b.Navigation("Proveedors");

                    b.Navigation("Sucursals");
                });

            modelBuilder.Entity("Compras.Models.Producto", b =>
                {
                    b.Navigation("Productorequisicions");
                });

            modelBuilder.Entity("Compras.Models.Proveedor", b =>
                {
                    b.Navigation("Categoriaproveedors");

                    b.Navigation("Cotizacions");

                    b.Navigation("Perfils");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Compras.Models.Referencium", b =>
                {
                    b.Navigation("Perfilreferencia");
                });

            modelBuilder.Entity("Compras.Models.Requisicion", b =>
                {
                    b.Navigation("Cotizacions");

                    b.Navigation("Productorequisicions");
                });

            modelBuilder.Entity("Compras.Models.Role", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("Compras.Models.Usuario", b =>
                {
                    b.Navigation("Requisicions");
                });
#pragma warning restore 612, 618
        }
    }
}
